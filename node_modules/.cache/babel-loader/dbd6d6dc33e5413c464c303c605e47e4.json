{"ast":null,"code":"var _jsxFileName = \"/home/samp/dev/practice-tracker/practice-tracker/src/Grid.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDataGrid from 'react-data-grid';\nimport 'react-data-grid/dist/react-data-grid.css';\nimport { NewItemButton, NewDateButton } from './Buttons.js';\nimport Cookie from 'js-cookie';\nimport useCookie from '@devhammed/use-cookie';\nconst originalColumn = {\n  key: \"item\",\n  name: \"Item\",\n  editable: true\n};\n\nconst Grid = () => {\n  let [datesCookie, setDatesCookie, deleteDatesCookie] = useCookie(\"dates\", []);\n  let [itemsCookie, setItemsCookie, deleteItemsCookie] = useCookie(\"items\", []);\n  let [dates, setDates] = useState(datesCookie);\n  let [items, setItems] = useState(itemsCookie);\n  useEffect(() => {\n    setDatesCookie(dates);\n    console.log(\"dates: \" + dates);\n  }, dates);\n  useEffect(() => {\n    setItemsCookie(items);\n    console.log(\"items: \" + items);\n  }, items);\n  let columns = [...dates];\n  columns.unshift(originalColumn);\n\n  let addRow = () => {\n    const item = prompt(\"New Item: \");\n    let newRow = {\n      item: item\n    };\n    let newItems = [...items];\n    newItems.push(newRow);\n    setItems(newItems);\n    setItemsCookie(newItems);\n  };\n\n  const addCol = () => {\n    const date = prompt(\"New Date: \");\n    let newCol = {\n      key: date,\n      name: date,\n      editable: true\n    };\n    let newCols = [...dates];\n    newCols.push(newCol);\n    setDates(newCols);\n    setDatesCookie(newCols);\n  };\n\n  let newItem = NewItemButton({\n    addRow\n  });\n  let newDate = NewDateButton({\n    addCol\n  });\n\n  const handleRowsUpdate = ({\n    fromRow,\n    toRow,\n    updated\n  }) => {\n    let newItems = [...items];\n\n    for (let i = fromRow; i <= toRow; i++) {\n      newItems[i] = { ...newItems[i],\n        ...updated\n      };\n    }\n\n    setItems(newItems);\n    setItemsCookie(newItems);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactDataGrid, {\n    columns: columns,\n    rows: items,\n    onRowsUpdate: handleRowsUpdate,\n    enableCellSelect: true,\n    minHeight: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), newItem, newDate);\n};\n\nexport default Grid;","map":{"version":3,"sources":["/home/samp/dev/practice-tracker/practice-tracker/src/Grid.js"],"names":["React","useState","useEffect","ReactDataGrid","NewItemButton","NewDateButton","Cookie","useCookie","originalColumn","key","name","editable","Grid","datesCookie","setDatesCookie","deleteDatesCookie","itemsCookie","setItemsCookie","deleteItemsCookie","dates","setDates","items","setItems","console","log","columns","unshift","addRow","item","prompt","newRow","newItems","push","addCol","date","newCol","newCols","newItem","newDate","handleRowsUpdate","fromRow","toRow","updated","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDataGrid from 'react-data-grid';\nimport 'react-data-grid/dist/react-data-grid.css';\nimport { NewItemButton, NewDateButton } from './Buttons.js';\nimport Cookie from 'js-cookie';\nimport useCookie from '@devhammed/use-cookie';\n\n\nconst originalColumn = { key: \"item\", name: \"Item\", editable: true };\n\nconst Grid = () => {\n    let [datesCookie, setDatesCookie, deleteDatesCookie] = useCookie(\"dates\", []);\n    let [itemsCookie, setItemsCookie, deleteItemsCookie] = useCookie(\"items\", []);\n\n    let [dates, setDates] = useState(datesCookie);\n    let [items, setItems] = useState(itemsCookie);\n\n    useEffect(() => {\n        setDatesCookie(dates);\n        console.log(\"dates: \" + dates);\n    }, dates);\n\n    useEffect(() => {\n        setItemsCookie(items);\n        console.log(\"items: \" + items);\n    }, items)\n\n    let columns = [...dates];\n    columns.unshift(originalColumn);    \n\n    let addRow = () => {\n        const item = prompt(\"New Item: \");\n        let newRow = { item: item };\n        let newItems = [...items];\n        newItems.push(newRow);\n        setItems(newItems);\n        setItemsCookie(newItems);\n    };\n\n    const addCol = () => {\n        const date = prompt(\"New Date: \");\n        let newCol = { key: date, name: date, editable: true };\n        let newCols = [...dates];        \n        newCols.push(newCol);\n        setDates(newCols);\n        setDatesCookie(newCols);\n    };\n\n    let newItem = NewItemButton({addRow});\n    let newDate = NewDateButton({addCol});\n\n    const handleRowsUpdate = ({ fromRow, toRow, updated }) => {\n        let newItems = [...items];\n        for(let i = fromRow; i <= toRow; i++) {\n            newItems[i] = { ...newItems[i], ...updated };\n        }\n        setItems(newItems);\n        setItemsCookie(newItems);\n    }\n\n    return (\n        <div>\n            <ReactDataGrid\n                columns={columns}\n                rows={items}\n                onRowsUpdate={handleRowsUpdate}\n                enableCellSelect={true}\n                minHeight={150}\n            />\n            {newItem}\n            {newDate}  \n        </div>\n        \n    )\n}\n\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}