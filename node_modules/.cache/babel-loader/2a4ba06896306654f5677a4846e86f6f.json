{"ast":null,"code":"var _jsxFileName = \"/home/samp/dev/practice-tracker/practice-tracker/src/Grid.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDataGrid from 'react-data-grid';\nimport 'react-data-grid/dist/react-data-grid.css';\nimport { NewItemButton, NewDateButton } from './Buttons.js';\nimport Cookie from 'js-cookie';\nconst originalColumn = {\n  key: \"item\",\n  name: \"Item\",\n  editable: true\n};\n\nconst Grid = () => {\n  // let d = Cookie.get(\"dates\");\n  // console.log(\"d: \" + d);\n  // if(d == undefined) {\n  //     d = [];\n  // }\n  let i = Cookie.get(\"items\");\n  console.log(\"i: \" + i);\n\n  if (i == undefined) {\n    i = [];\n  } // let [dates, setDates] = useState(d);\n\n\n  let [dates, setDates] = useState([]);\n  let [items, setItems] = useState(Cookie.get('items\"')); // let [dates, setDates] = useState([]);\n  // let [items, setItems] = useState([]);\n  // useEffect(() => {\n  //     Cookie.set(\"dates\", dates);\n  //     console.log(\"dates :\" + dates);\n  // }, dates);\n\n  useEffect(() => {\n    Cookie.set(\"items\", items);\n    console.log(\"items: \" + items);\n  }, items);\n  let columns = [...dates];\n  columns.unshift(originalColumn);\n\n  let addRow = () => {\n    const item = prompt(\"New Item: \");\n    let newRow = {\n      item: item\n    };\n    let newItems = [...items];\n    newItems.push(newRow);\n    setItems(newItems);\n  };\n\n  const addCol = () => {\n    const date = prompt(\"New Date: \");\n    let newCol = {\n      key: date,\n      name: date,\n      editable: true\n    };\n    let newCols = [...dates];\n    newCols.push(newCol);\n    setDates(newCols);\n  };\n\n  let newItem = NewItemButton({\n    addRow\n  });\n  let newDate = NewDateButton({\n    addCol\n  });\n\n  const handleRowsUpdate = ({\n    fromRow,\n    toRow,\n    updated\n  }) => {\n    let newItems = [...items];\n\n    for (let i = fromRow; i <= toRow; i++) {\n      newItems[i] = { ...newItems[i],\n        ...updated\n      };\n    }\n\n    setItems(newItems);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactDataGrid, {\n    columns: columns,\n    rows: items,\n    onRowsUpdate: handleRowsUpdate,\n    enableCellSelect: true,\n    minHeight: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), newItem, newDate);\n};\n\nexport default Grid;","map":{"version":3,"sources":["/home/samp/dev/practice-tracker/practice-tracker/src/Grid.js"],"names":["React","useState","useEffect","ReactDataGrid","NewItemButton","NewDateButton","Cookie","originalColumn","key","name","editable","Grid","i","get","console","log","undefined","dates","setDates","items","setItems","set","columns","unshift","addRow","item","prompt","newRow","newItems","push","addCol","date","newCol","newCols","newItem","newDate","handleRowsUpdate","fromRow","toRow","updated"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDataGrid from 'react-data-grid';\nimport 'react-data-grid/dist/react-data-grid.css';\nimport { NewItemButton, NewDateButton } from './Buttons.js';\nimport Cookie from 'js-cookie';\n\n\nconst originalColumn = { key: \"item\", name: \"Item\", editable: true };\n\nconst Grid = () => {\n    // let d = Cookie.get(\"dates\");\n    // console.log(\"d: \" + d);\n    // if(d == undefined) {\n    //     d = [];\n    // }\n    let i = Cookie.get(\"items\");\n    console.log(\"i: \" + i);\n    if(i == undefined) {\n        i = [];\n    }\n\n    // let [dates, setDates] = useState(d);\n    let [dates, setDates] = useState([]);\n    let [items, setItems] = useState(Cookie.get('items\"'));\n\n\n    // let [dates, setDates] = useState([]);\n    // let [items, setItems] = useState([]);\n\n    // useEffect(() => {\n    //     Cookie.set(\"dates\", dates);\n    //     console.log(\"dates :\" + dates);\n    // }, dates);\n\n    useEffect(() => {\n        Cookie.set(\"items\", items);\n        console.log(\"items: \" + items);\n    }, items)\n\n    let columns = [...dates];\n    columns.unshift(originalColumn);    \n\n    let addRow = () => {\n        const item = prompt(\"New Item: \");\n        let newRow = { item: item };\n        let newItems = [...items];\n        newItems.push(newRow);\n        setItems(newItems);\n    };\n\n    const addCol = () => {\n        const date = prompt(\"New Date: \");\n        let newCol = { key: date, name: date, editable: true };\n        let newCols = [...dates];        \n        newCols.push(newCol);\n        setDates(newCols);\n    };\n\n    let newItem = NewItemButton({addRow});\n    let newDate = NewDateButton({addCol});\n\n    const handleRowsUpdate = ({ fromRow, toRow, updated }) => {\n        let newItems = [...items];\n        for(let i = fromRow; i <= toRow; i++) {\n            newItems[i] = { ...newItems[i], ...updated };\n        }\n        setItems(newItems);\n    }\n\n    return (\n        <div>\n            <ReactDataGrid\n                columns={columns}\n                rows={items}\n                onRowsUpdate={handleRowsUpdate}\n                enableCellSelect={true}\n                minHeight={150}\n            />\n            {newItem}\n            {newDate}  \n        </div>\n        \n    )\n}\n\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}