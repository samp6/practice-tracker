{"ast":null,"code":"var _jsxFileName = \"/home/samp/dev/practice-tracker/practice-tracker/src/Grid.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDataGrid from 'react-data-grid';\nimport 'react-data-grid/dist/react-data-grid.css';\nimport { NewItemButton, NewDateButton } from './Buttons.js';\nimport Cookie from 'js-cookie';\nimport useCookie from '@devhammed/use-cookie';\nconst originalColumn = {\n  key: \"item\",\n  name: \"Item\",\n  editable: true\n};\n\nconst Grid = () => {\n  let [dates, setDates, deleteDatesCookie] = useCookie(\"dates\", []);\n  let [items, setItems, deleteItemsCookie] = useCookie(\"items\", []);\n  let itemsCookie,\n      datesCookie = {};\n\n  let setDatesCookie = () => {};\n\n  let setItemsCookie = () => {}; // let [dates, setDates] = useState(datesCookie);\n  // let [items, setItems] = useState(itemsCookie);\n\n\n  var date = new Date();\n  const options = {\n    expires: Date.now() + 60 * 60 * 24 * 365,\n    maxAge: Date.now() + 60 * 60 * 24 * 365\n  };\n  useEffect(() => {\n    setDatesCookie(dates, options);\n    console.log(\"dates: \" + dates);\n  }, dates);\n  useEffect(() => {\n    setItemsCookie(items, options);\n    console.log(\"items: \" + items);\n  }, items);\n  let columns = [...dates];\n  columns.unshift(originalColumn);\n\n  let addRow = () => {\n    const item = prompt(\"New Item: \");\n    let newRow = {\n      item: item\n    };\n    let newItems = [...items];\n    newItems.push(newRow);\n    setItems(newItems, options);\n    setItemsCookie(newItems, options);\n  };\n\n  const addCol = () => {\n    const date = prompt(\"New Date: \");\n    let newCol = {\n      key: date,\n      name: date,\n      editable: true\n    };\n    let newCols = [...dates];\n    newCols.push(newCol);\n    setDates(newCols, options);\n    setDatesCookie(newCols, options);\n  };\n\n  let newItem = NewItemButton({\n    addRow\n  });\n  let newDate = NewDateButton({\n    addCol\n  });\n\n  const handleRowsUpdate = ({\n    fromRow,\n    toRow,\n    updated\n  }) => {\n    let newItems = [...items];\n\n    for (let i = fromRow; i <= toRow; i++) {\n      newItems[i] = { ...newItems[i],\n        ...updated\n      };\n    }\n\n    setItems(newItems);\n    setItemsCookie(newItems);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactDataGrid, {\n    columns: columns,\n    rows: items,\n    onRowsUpdate: handleRowsUpdate,\n    enableCellSelect: true,\n    minHeight: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), newItem, newDate);\n};\n\nexport default Grid;","map":{"version":3,"sources":["/home/samp/dev/practice-tracker/practice-tracker/src/Grid.js"],"names":["React","useState","useEffect","ReactDataGrid","NewItemButton","NewDateButton","Cookie","useCookie","originalColumn","key","name","editable","Grid","dates","setDates","deleteDatesCookie","items","setItems","deleteItemsCookie","itemsCookie","datesCookie","setDatesCookie","setItemsCookie","date","Date","options","expires","now","maxAge","console","log","columns","unshift","addRow","item","prompt","newRow","newItems","push","addCol","newCol","newCols","newItem","newDate","handleRowsUpdate","fromRow","toRow","updated","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDataGrid from 'react-data-grid';\nimport 'react-data-grid/dist/react-data-grid.css';\nimport { NewItemButton, NewDateButton } from './Buttons.js';\nimport Cookie from 'js-cookie';\nimport useCookie from '@devhammed/use-cookie';\n\n\nconst originalColumn = { key: \"item\", name: \"Item\", editable: true };\n\nconst Grid = () => {\n    let [dates, setDates, deleteDatesCookie] = useCookie(\"dates\", []);\n    let [items, setItems, deleteItemsCookie] = useCookie(\"items\", []);\n\n    let itemsCookie, datesCookie = {};\n    let setDatesCookie = () => {};\n    let setItemsCookie = () => {};\n\n    // let [dates, setDates] = useState(datesCookie);\n    // let [items, setItems] = useState(itemsCookie);\n    \n    var date = new Date();       \n    const options = {        \n        expires: Date.now() + 60*60*24*365,\n        maxAge: Date.now() + 60*60*24*365\n    };\n\n    useEffect(() => {\n        setDatesCookie(dates, options);\n        console.log(\"dates: \" + dates);\n    }, dates);\n\n    useEffect(() => {        \n        setItemsCookie(items, options);\n        console.log(\"items: \" + items);\n    }, items)\n\n    let columns = [...dates];\n    columns.unshift(originalColumn);    \n\n    let addRow = () => {\n        const item = prompt(\"New Item: \");\n        let newRow = { item: item };\n        let newItems = [...items];\n        newItems.push(newRow);\n        setItems(newItems, options);\n        setItemsCookie(newItems, options);\n    };\n\n    const addCol = () => {\n        const date = prompt(\"New Date: \");\n        let newCol = { key: date, name: date, editable: true };\n        let newCols = [...dates];        \n        newCols.push(newCol);\n        setDates(newCols, options);\n        setDatesCookie(newCols, options);\n    };\n\n    let newItem = NewItemButton({addRow});\n    let newDate = NewDateButton({addCol});\n\n    const handleRowsUpdate = ({ fromRow, toRow, updated }) => {\n        let newItems = [...items];\n        for(let i = fromRow; i <= toRow; i++) {\n            newItems[i] = { ...newItems[i], ...updated };\n        }\n        setItems(newItems);\n        setItemsCookie(newItems);\n    }\n\n    return (\n        <div>\n            <ReactDataGrid\n                columns={columns}\n                rows={items}\n                onRowsUpdate={handleRowsUpdate}\n                enableCellSelect={true}\n                minHeight={150}\n            />\n            {newItem}\n            {newDate}  \n        </div>\n        \n    )\n}\n\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}